{"dependencies":[{"uri":"dart-sdk/lib/core/core.dart","name":"dart:core","id":"dart.core","children":[{"comment":"\nEverything in Dart is an [Object].\n","uri":"dart-sdk/lib/core/object.dart","name":"Object","id":"Object","children":[{"returnType":{"refId":"dart.core/bool","name":"bool"},"isOperator":true,"comment":"\nThe equality operator.\n\nThe default behavior for all [Object]s is to return true if and\nonly if [:this:] and [other] are the same object.\n\nIf a subclass overrides the equality operator it should override\nthe [hashCode] method as well to maintain consistency.\n","name":"==","id":"==1()","children":[{"name":"other","id":"other","kind":"param"}],"line":"29","kind":"method"},{"returnType":{"refId":"dart.core/String","name":"String"},"comment":"\nReturns a string representation of this object.\n","name":"toString","id":"toString0()","line":"48","kind":"method"},{"comment":"\n[noSuchMethod] is invoked when users invoke a non-existant method\non an object. The name of the method and the arguments of the\ninvocation are passed to [noSuchMethod] in an [Invocation].\nIf [noSuchMethod] returns a value, that value becomes the result of\nthe original invocation.\n\nThe default behavior of [noSuchMethod] is to throw a\n[noSuchMethodError].\n","name":"noSuchMethod","id":"noSuchMethod1()","children":[{"ref":{"refId":"dart.core/Invocation","name":"Invocation"},"name":"invocation","id":"invocation","kind":"param"}],"line":"60","kind":"method"},{"ref":{"refId":"dart.core/int","name":"int"},"comment":"\nGet a hash code for this object.\n\nAll objects have hash codes. Hash codes are guaranteed to be the\nsame for objects that are equal when compared using the equality\noperator [:==:]. Other than that there are no guarantees about\nthe hash codes. They will not be consistent between runs and\nthere are no distribution guarantees.\n\nIf a subclass overrides [hashCode] it should override the\nequality operator as well to maintain consistency.\n","name":"hashCode","id":"hashCode","line":"43","kind":"property"},{"ref":{"refId":"dart.core/Type","name":"Type"},"comment":"\nA representation of the runtime type of the object.\n","name":"runtimeType","id":"runtimeType","line":"65","kind":"property"},{"comment":"\nCreates a new [Object] instance.\n\n[Object] instances have no meaningful state, and are only useful\nthrough their identity. An [Object] instance is equal to itself\nonly.\n","name":"Object","id":"Object0()","line":"18","kind":"constructor"}],"line":"10","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"isThrowable":true,"comment":"\nA marker interface implemented by all core library exceptions.\n\nAn [Exception] is intended to convey information to the user about a failure,\nso that the error can be addressed programmatically. It is intended to be\ncaught, and it should contain useful data fields.\n\nCreating instances of [Exception] directly with [:new Exception(\"message\"):]\nis discouraged, and only included as a temporary measure during development,\nuntil the actual exceptions used by a library are done.\n","uri":"dart-sdk/lib/core/exceptions.dart","name":"Exception","id":"Exception","children":[{"name":"Exception","id":"Exception1()","children":[{"isOptional":true,"name":"message","id":"message","kind":"param"}],"line":"21","kind":"constructor"}],"line":"20","kind":"class"}],"line":"5","kind":"library"}],"uri":"rodin/rodin.dart","name":"file:///Users/enyo/dart/rodin/rodin.dart","id":"rodin","children":[{"returnType":{"refId":"rodin/ModelDescription","name":"ModelDescription"},"comment":"Returns the description for given model.\n\nSee [ModelDescription] for more information.","name":"getModelDescription","id":"getModelDescription1()","children":[{"ref":{"refId":"rodin/Model","name":"Model"},"name":"model","id":"model","kind":"param"}],"line":"28","kind":"method"},{"returnType":{"refId":"rodin/ModelDescription","name":"ModelDescription"},"comment":"Creates a [ModelDescription] for the provided model, and adds it to the\n[modelDescriptions] List.","name":"registerModel","id":"registerModel3()","children":[{"ref":{"refId":"dart.core/Type","name":"Type"},"name":"model","id":"model","kind":"param"},{"ref":{"refId":"mongo_dart/Db","name":"Db"},"name":"db","id":"db","kind":"param"},{"isNamed":true,"isOptional":true,"name":"specifications","id":"specifications","kind":"param"}],"line":"18","kind":"method"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"rodin/ModelDescription","name":"ModelDescription"}],"name":"List"},"name":"modelDescriptions","id":"modelDescriptions","line":"13","kind":"variable"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"This class describes a model.\n\nWhen created, it reflects the model and extracts all fields including\nannotations (as soon as it's possible) for the specifications.\n\nAt the moment, all specifications have to be stored in the _specifications\nattribute.","uri":"rodin/src/model_description.dart","name":"ModelDescription","id":"ModelDescription","children":[{"returnType":{"refId":"void","name":"void"},"name":"_reflectModel","isPrivate":true,"id":"_reflectModel0()","line":"39","kind":"method"},{"ref":{"refId":"dart.core/List","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"List"},"name":"_validTypes","isPrivate":true,"id":"_validTypes","line":"13","kind":"variable"},{"ref":{"refId":"dart.core/Type","name":"Type"},"name":"modelClass","id":"modelClass","line":"20","kind":"variable"},{"ref":{"refId":"mongo_dart/Db","name":"Db"},"name":"db","id":"db","line":"22","kind":"variable"},{"ref":{"refId":"mongo_dart/DbCollection","name":"DbCollection"},"name":"dbCollection","id":"dbCollection","line":"24","kind":"variable"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/List","arguments":[{"refId":"rodin/Specification","name":"Specification"}],"name":"List"}],"name":"Map"},"name":"specifications","id":"specifications","line":"26","kind":"variable"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/String","name":"String"}],"name":"Map"},"comment":"A map from fieldName to fieldType (as string. eg: dart.core.String)","name":"fields","id":"fields","line":"29","kind":"variable"},{"name":"ModelDescription","id":"ModelDescription3()","children":[{"initializedField":{"refId":"rodin/ModelDescription/modelClass","name":"modelClass"},"ref":{"refId":"dart.core/Type","name":"Type"},"name":"modelClass","id":"modelClass","kind":"param"},{"initializedField":{"refId":"rodin/ModelDescription/db","name":"db"},"ref":{"refId":"mongo_dart/Db","name":"Db"},"name":"db","id":"db","kind":"param"},{"initializedField":{"refId":"rodin/ModelDescription/specifications","name":"specifications"},"isNamed":true,"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"dart.core/List","arguments":[{"refId":"rodin/Specification","name":"Specification"}],"name":"List"}],"name":"Map"},"isOptional":true,"name":"specifications","id":"specifications","kind":"param"}],"line":"31","kind":"constructor"}],"line":"11","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"Extend this class to create a model of your own.\n\nDefine all fields of your database with normal types.\n\nUse the static field `specifications` to define the specifications\nfor now (see the [Specification] class).\n\nIn the future you will be able to use metadata for it.","uri":"rodin/src/model.dart","name":"Model","id":"Model","children":[{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"rodin/Model","name":"Model"}],"name":"Future"},"comment":"Finds the model in the database.\n\nUsually this is used like this:\n\n    new MyModel()\n        ..name = \"test\"\n        ..find().then((Model record) {\n          // handle the record\n        });","name":"find","id":"find0()","line":"58","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"comment":"Saves the model to the database.","name":"save","id":"save0()","line":"75","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"comment":"Deletes the model from the database.","name":"delete","id":"delete0()","line":"80","kind":"method"},{"returnType":{"refId":"dart.async/Future","name":"Future"},"comment":"Updates the model in the database.","name":"update","id":"update0()","line":"85","kind":"method"},{"ref":{"refId":"rodin/ModelDescription","name":"ModelDescription"},"comment":"Returns the model description for this model.\n\nGets the [ModelDescription] with [getModelDescription] the first time\nand caches the response for further requests.","name":"$description","id":"$description","line":"22","kind":"property"},{"ref":{"refId":"mongo_dart/DbCollection","name":"DbCollection"},"comment":"Returns the collection for this model.","name":"_dbCollection","isPrivate":true,"id":"_dbCollection","line":"30","kind":"property"},{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"}],"name":"Map"},"comment":"Returns a list of changed fields.","name":"$changedFields","id":"$changedFields","line":"35","kind":"property"},{"ref":{"refId":"bson/ObjectId","name":"ObjectId"},"name":"id","id":"id","line":"14","kind":"variable"},{"ref":{"refId":"rodin/ModelDescription","name":"ModelDescription"},"name":"_description","isPrivate":true,"id":"_description","line":"16","kind":"variable"}],"line":"12","kind":"class"},{"interfaces":[{"refId":"rodin/Specification","name":"Specification"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"Specifies a compound index for multiple properties.","uri":"rodin/src/specifications.dart","name":"CompoundIndex","id":"CompoundIndex","children":[{"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"rodin/Direction","name":"Direction"}],"name":"Map"},"isFinal":true,"comment":"A compound index could look like this:\n\n    { \"firstName\": Direction.ASC, \"lastName\": Direction.DESC }\n","name":"properties","id":"properties","line":"57","kind":"variable"},{"name":"CompoundIndex","id":"CompoundIndex1()","children":[{"initializedField":{"refId":"rodin/CompoundIndex/properties","name":"properties"},"ref":{"refId":"dart.core/Map","arguments":[{"refId":"dart.core/String","name":"String"},{"refId":"rodin/Direction","name":"Direction"}],"name":"Map"},"name":"properties","id":"properties","kind":"param"}],"line":"59","kind":"constructor"}],"line":"51","kind":"class"},{"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"Defines the direction for mongo's compound indexes.\n\nSee the [mongodb manual on compound indexes](http://docs.mongodb.org/manual/core/indexes/#compound-indexes)\nfor more information.","uri":"rodin/src/specifications.dart","name":"Direction","id":"Direction","children":[{"isStatic":true,"name":"ASC","id":"ASC","line":"39","kind":"variable"},{"isStatic":true,"name":"DESC","id":"DESC","line":"41","kind":"variable"},{"ref":{"refId":"dart.core/int","name":"int"},"isFinal":true,"name":"_direction","isPrivate":true,"id":"_direction","line":"44","kind":"variable"},{"name":"Direction._","isPrivate":true,"id":"Direction._1()","children":[{"initializedField":{"refId":"rodin/Direction/_direction","name":"_direction"},"ref":{"refId":"dart.core/int","name":"int"},"name":"_direction","isPrivate":true,"id":"_direction","kind":"param"}],"line":"46","kind":"constructor"}],"line":"37","kind":"class"},{"interfaces":[{"refId":"rodin/Specification","name":"Specification"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"Specifies an index for a property.","uri":"rodin/src/specifications.dart","name":"Index","id":"Index","children":[{"name":"Index","id":"Index0()","line":"28","kind":"constructor"}],"line":"26","kind":"class"},{"interfaces":[{"refId":"rodin/Specification","name":"Specification"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"Marks a property as unique.","uri":"rodin/src/specifications.dart","name":"Unique","id":"Unique","children":[{"name":"Unique","id":"Unique0()","line":"20","kind":"constructor"}],"line":"18","kind":"class"},{"interfaces":[{"refId":"rodin/Specification","name":"Specification"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"Marks a property as required.","uri":"rodin/src/specifications.dart","name":"Required","id":"Required","children":[{"name":"Required","id":"Required0()","line":"13","kind":"constructor"}],"line":"11","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"comment":"Serves as interface for all Specifications.","uri":"rodin/src/specifications.dart","name":"Specification","id":"Specification","line":"5","kind":"class"},{"interfaces":[{"refId":"dart.core/Exception","name":"Exception"}],"superclass":{"refId":"dart.core/Object","name":"Object"},"isThrowable":true,"uri":"rodin/src/exceptions.dart","name":"RodinException","id":"RodinException","children":[{"returnType":{"refId":"dart.core/String","name":"String"},"name":"toString","id":"toString0()","line":"9","kind":"method"},{"ref":{"refId":"dart.core/String","name":"String"},"isFinal":true,"name":"msg","id":"msg","line":"5","kind":"variable"},{"name":"RodinException","id":"RodinException1()","children":[{"initializedField":{"refId":"rodin/RodinException/msg","name":"msg"},"ref":{"refId":"dart.core/String","name":"String"},"isOptional":true,"name":"msg","id":"msg","kind":"param"}],"line":"7","kind":"constructor"}],"line":"3","kind":"class"},{"isAbstract":true,"superclass":{"refId":"dart.core/Object","name":"Object"},"name":"MongoMache","id":"MongoMache","children":[{"returnType":{"refId":"dart.async/Future","arguments":[{"refId":"rodin/Model","name":"Model"}],"name":"Future"},"name":"find","id":"find1()","children":[{"ref":{"refId":"rodin/Model","name":"Model"},"name":"model","id":"model","kind":"param"}],"line":"34","kind":"method"}],"line":"32","kind":"class"}],"line":"1","kind":"library"}